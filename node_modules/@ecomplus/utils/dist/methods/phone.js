"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var phone = function phone(customer) {
  // empty string by default
  var phoneString = '';

  if (_typeof(customer) === 'object' && customer !== null) {
    var _phone = Array.isArray(customer.phones) // use first customer phone by default
    ? customer.phones[0] : customer;

    if (_phone && _phone.number) {
      if (_phone.country_code) {
        phoneString = "+".concat(_phone.country_code, " ");
      }

      phoneString += _phone.number;
    }
  }

  return phoneString;
};
/**
 * @method
 * @memberof ecomUtils
 * @name phone
 * @description Returns phone string from customer body or phone object.
 * @param {object} customer - Customer body object or phone object with number property
 * @returns {string}
 *
 * @example
 * const customer = { 'number': '31992980000'}
 * ecomUtils.phone(customer)
 * // => '31992980000'
 */


var _default = phone;
exports.default = _default;