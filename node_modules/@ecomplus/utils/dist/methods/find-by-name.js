"use strict";

require("core-js/modules/es.array.map");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _name = _interopRequireDefault(require("./name"));

var _findByProperty = _interopRequireDefault(require("./find-by-property"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var findByName = function findByName(list, title) {
  // try to find by name property first
  var objByName = (0, _findByProperty.default)(list, 'name', title);

  if (objByName) {
    // found
    return objByName;
  } // try to find by transalated name or title prop


  var newList = list.map(function (obj) {
    return obj && {
      name: (0, _name.default)(obj)
    };
  });
  return (0, _findByProperty.default)(newList, 'name', title);
};
/**
 * @method
 * @memberof ecomUtils
 * @name findByName
 * @description Find object from list by name or title value.
 * @param {array} list - List of nested objects
 * @param {string} title - Object (category, brand, product...) name or title value
 * @returns {object|undefined}
 *
 * @example
 * const listOfNested = [{"name": "Ultimate Blaster", "sku": "MHP4824"}, {"name": "Xiaomi","sku": "smtp-xomi-9746"}]
 * ecomUtils.findByName(listOfNested, 'Ultimate Blaster')
 * // => {name: "Ultimate Blaster", sku: "MHP4824"}
 */


var _default = findByName;
exports.default = _default;