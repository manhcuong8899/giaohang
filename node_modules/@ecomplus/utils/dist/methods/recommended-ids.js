"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var recommendedIds = function recommendedIds(result) {
  var data;

  if (_typeof(result) === 'object' && result !== null) {
    if (Array.isArray(result)) {
      data = result;
    } else if (result.results && result.results[0]) {
      // Neo4j response body
      data = result.results[0].data;
    }
  } // setup ids list


  var ids = [];

  if (Array.isArray(data)) {
    // map ids array from Neo4j data list
    data.forEach(function (_ref) {
      var row = _ref.row;
      ids.push(row[0]);
    });
  }

  return ids;
};
/**
 * @method
 * @memberof ecomUtils
 * @name recommendedIds
 * @description Returns array of product IDs from Graphs API response.
 * @param {object|array} result - Recommend/related products response body
 * @returns {array}
 *
 * @example

// Full Graphs API response samples:
// https://developers.e-com.plus/docs/api/#/graphs/products/recommended
const result = { results: [ { columns: [], data: [] } ] }
result.results[0].data.push(
  { row: [ 'a00000000000000000000001' ], meta: [ null ] },
  { row: [ 'a00000000000000000000002' ], meta: [ null ] },
  { row: [ 'a00000000000000000000006' ], meta: [ null ] }
)
ecomUtils.recommendedIds(result)
// => [ 'a00000000000000000000001', 'a00000000000000000000002', 'a00000000000000000000006' ]

 */


var _default = recommendedIds;
exports.default = _default;