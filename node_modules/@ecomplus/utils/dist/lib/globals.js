"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.env = exports.root = void 0;

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var env, root;
exports.root = root;
exports.env = env;

if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' && window) {
  // browser env
  exports.root = root = exports.env = env = window;
} else if ((typeof process === "undefined" ? "undefined" : _typeof(process)) === 'object' && process.env) {
  // Node.js env
  exports.root = root = global;
  exports.env = env = process.env;
} else {
  /* global self */
  // fallback to empty config object
  exports.root = root = exports.env = env = (typeof self === "undefined" ? "undefined" : _typeof(self)) === 'object' && self || {};
}